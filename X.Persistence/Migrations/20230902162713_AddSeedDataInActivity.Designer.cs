// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using X.Persistence.DatabaseContexts;

#nullable disable

namespace X.Persistence.Migrations
{
    [DbContext(typeof(XDatabaseContext))]
    [Migration("20230902162713_AddSeedDataInActivity")]
    partial class AddSeedDataInActivity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("X.Domain.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatorId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifierId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("612ea22b-edee-4bf2-a8b5-52215d4b9919"),
                            Category = "film",
                            City = "Tehran",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 7, 2, 19, 57, 13, 280, DateTimeKind.Local).AddTicks(8097),
                            Description = "Activity 2 months ago",
                            Title = "Past Activity 1",
                            Venue = "Azadi"
                        },
                        new
                        {
                            Id = new Guid("e991677a-8cec-4644-b36e-60a6cbec3aae"),
                            Category = "music",
                            City = "Tehran",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 8, 2, 19, 57, 13, 280, DateTimeKind.Local).AddTicks(8121),
                            Description = "Activity 1 month ago",
                            Title = "Past Activity 2",
                            Venue = "Vahdat"
                        },
                        new
                        {
                            Id = new Guid("cf93d885-7047-476e-a292-533975b5384a"),
                            Category = "film",
                            City = "Tehran",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 10, 2, 19, 57, 13, 280, DateTimeKind.Local).AddTicks(8125),
                            Description = "Activity 1 month in future",
                            Title = "Future Activity 1",
                            Venue = "Farhang"
                        },
                        new
                        {
                            Id = new Guid("2c807c24-c03f-4b8f-b407-1bccfeb8c059"),
                            Category = "music",
                            City = "Tehran",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 11, 2, 19, 57, 13, 280, DateTimeKind.Local).AddTicks(8140),
                            Description = "Activity 2 months in future",
                            Title = "Future Activity 2",
                            Venue = "Milad"
                        },
                        new
                        {
                            Id = new Guid("914fed12-60e7-44a3-9483-06d92895fcba"),
                            Category = "sport",
                            City = "Tehran",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 12, 2, 19, 57, 13, 280, DateTimeKind.Local).AddTicks(8144),
                            Description = "Activity 3 months in future",
                            Title = "Future Activity 3",
                            Venue = "Bam"
                        },
                        new
                        {
                            Id = new Guid("39e3896b-440f-47fb-b0bc-e6651ab750d5"),
                            Category = "travel",
                            City = "Mazandaran",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 7, 2, 19, 57, 13, 280, DateTimeKind.Local).AddTicks(8147),
                            Description = "Activity 2 months ago",
                            Title = "Past Activity 1",
                            Venue = "Motelgho"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
